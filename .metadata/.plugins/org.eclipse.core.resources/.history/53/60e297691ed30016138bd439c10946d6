package poomine;

import lib.TextIO;

public class Game {

	public static void main(String[] args) {

		boolean gameOn = true; // Game starts.
		while (gameOn) {

			System.out.println("Hello, player! Welcome to a game of Hangman!"); // Introduction.
			System.out.println("The rules are very simple. You need to guess a word.");
			System.out.println("You have equal amount of tries to the characters in a word.");
			System.out.println("Good luck! And remember, don't hate the game, hate the player.");
			System.out.println("If you're a quitter, and giving up is for you. Insert '.'");
			System.out.println("Please insert your first guess.");

			Words words = new Words(); // Brings in another class.
			String word = words.getRandom(); // Declares what will 'word' do -
												// get a random word from the
												// array list in Words class.

			char[] listOfWords = word.toCharArray(); // Each letter from the
														// generated random word
														// will be treated
														// individually.

			int amountOfGuesses = word.length(); // Declares that the player has
													// the same amount of
													// guesses as the word is
													// long.
			char[] guess = new char[amountOfGuesses]; // Separates player's
														// guesses from the
														// guesses (s)he is
														// given.

			for (int i = 0; i < guess.length; i++) { // Indicates every
														// non-guessed letter
														// remains _.
				guess[i] = '_';

			}

			boolean gameOver = false; // Player starts playing the game.
			int tries = 0; // Tries player starts with.

			while (!gameOver && tries != amountOfGuesses) { // As long as game
															// is not over and
															// amount of guesses
															// is not equal to
															// tries player has
															// left--
				displayBlanks(guess); // Shows the player the blanks (s)he has
										// to guess.
				System.out.println("Guesses left: " + (amountOfGuesses - tries)); // Shows
																					// the
																					// guesses
																					// left,
																					// losing
																					// one
																					// each
																					// try.
				System.out.println("Please enter a letter!");
				String letter = TextIO.getln().toUpperCase(); // Player inserts
																// the letter,
																// making sure
																// it's in upper
																// case.

				char inserted = letter.charAt(0); // Reads the first letter in
													// case the player adds two
													// or more.

				tries++; // Adds one try each time the player has inserted a
							// letter.

				if (inserted == '.') { // Whenever the player inserts .(dot,
										// punctuation mark)..
					gameOn = false; // .. game stops working..
					gameOver = true; // .. and the game ends.

				} else {
					for (int i = 0; i < listOfWords.length; i++) {
						if (listOfWords[i] == inserted) { // If the inserted
															// word matches with
															// the randomly
															// generated word's
															// array..
							guess[i] = inserted; // .. the inserted letter will
													// be revealed and the blank
													// will be replaced with it.
						}
					}

					if (correctWord(guess)) { // If the word is guessed, the
												// game will be over and the
												// player has won.

						gameOver = true;
						System.out.println(word);
						System.out.println("You won the game! Insert 'y' if you'd like to play once more.");
						String newGame = TextIO.getln();

						gameOn = newGame.equalsIgnoreCase("y");
						

					} 
				}

			}
		}
		System.out.println("Game over. Insert 'y' if you'd like to play once more.");
						String newGame = TextIO.getln();

						gameOn = newGame.equalsIgnoreCase("y");
						

	}

	public static void displayBlanks(char[] array) { // Puts the word into an
														// order, separating
														// each letter with
														// space.

		for (int i = 0; i < array.length; i++) {
			System.out.print(array[i] + " ");
		}
		System.out.println();
	}

	public static boolean correctWord(char[] array) { // Returns false until all
														// the letters have been
														// guessed.
		for (int i = 0; i < array.length; i++) {
			if (array[i] == '_')
				return false;
		}
		return true;

	}
}
